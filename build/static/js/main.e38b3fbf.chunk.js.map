{"version":3,"sources":["Nav.js","Login.js","Registration.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","href","id","type","placeholder","aria-label","Login","for","class","aria-describedby","React","Component","Registration","props","onChangename","bind","onChangefatherName","onChangecategory","onChangeaddress","onChangemobileNumber","onChangepercentage","onSubmit","state","name","fatherName","category","address","mobileNumber","percentage","e","this","setState","target","value","preventDefault","student1","console","log","axios","post","then","res","data","onChange","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e38b3fbf.chunk.js","sourcesContent":["import React from \"react\"\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './App.css';\r\n\r\nfunction Nav(){\r\n\r\n        return( \r\n            <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-info\">\r\n                <a className=\"navbar-brand\" href=\"./\"><strong>Parikshar College Galifa</strong></a>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/\">Home <span className=\"sr-only\">(current)</span></a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/Login\">Login</a>\r\n                        </li>\r\n                    <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"/Register\">Register</a>\r\n                    </li>\r\n                </ul>\r\n            </div>   \r\n            <form className=\"form-inline\">\r\n                <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                <button className=\"btn btn-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n            </form>\r\n            </nav>\r\n        </div>           \r\n        );\r\n\r\n}\r\n\r\nexport default Nav;","import React from \"react\"\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './App.css';\r\n\r\nclass Login extends React.Component {\r\n\r\n        render () { \r\n            return( \r\n                    <div >\r\n                    <div className=\"row\">\r\n                    <div className='col-1'></div>\r\n                    <div className='col-4'>\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label for=\"exampleInputEmail1\">Email address</label>\r\n                                <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label for=\"exampleInputPassword1\">Password</label>\r\n                                <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" />\r\n                            </div>\r\n                            <button type=\"submit\" class=\"btn btn-primary\">Login</button>\r\n                        </form>\r\n                    </div>\r\n                    <div className='col-2'></div>\r\n                    <div className='col-4'>\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header bg-primary text-light\">\r\n                                Notice Board\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Special title treatment</h5>\r\n                                <p className=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n                                <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-1'></div>\r\n                    </div>\r\n                    </div>\r\n                )\r\n             }\r\n}\r\n\r\nexport default Login;","import React from \"react\"\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './App.css';\r\nimport axios from 'axios';\r\n\r\n\r\nclass  Registration extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.onChangename = this.onChangename.bind(this);\r\n        this.onChangefatherName = this.onChangefatherName.bind(this);\r\n        this.onChangecategory = this.onChangecategory.bind(this);\r\n        this.onChangeaddress = this.onChangeaddress.bind(this);\r\n        this.onChangemobileNumber = this.onChangemobileNumber.bind(this);\r\n        this.onChangepercentage = this.onChangepercentage.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    \r\n        this.state = {\r\n          name: '',\r\n          fatherName: '',\r\n          category: '',\r\n          address: '',\r\n          mobileNumber: '',\r\n          percentage:''\r\n        }\r\n      }\r\n    \r\n     \r\n    \r\n      onChangename(e) {\r\n        this.setState({\r\n          name: e.target.value\r\n        })\r\n      }\r\n    \r\n      onChangefatherName(e) {\r\n        this.setState({\r\n          fatherName: e.target.value\r\n        })\r\n      }\r\n    \r\n      onChangecategory(e) {\r\n        this.setState({\r\n          category: e.target.value\r\n        })\r\n      }\r\n\r\n      onChangeaddress(e) {\r\n        this.setState({\r\n          address: e.target.value\r\n        })\r\n      }\r\n    \r\n\r\n      onChangemobileNumber(e) {\r\n        this.setState({\r\n          mobileNumber: e.target.value\r\n        })\r\n      }\r\n\r\n      onChangepercentage(e) {\r\n        this.setState({\r\n          percentage: e.target.value\r\n        })\r\n      }\r\n    \r\n      onSubmit(e) {\r\n        e.preventDefault();\r\n    \r\n        const student1 = {\r\n          name: this.state.name,\r\n          fatherName: this.state.fatherName,\r\n          category: this.state.category,\r\n          address: this.state.address,\r\n          mobileNumber: this.state.mobileNumber,\r\n          percentage: this.state.percentage\r\n        }\r\n    \r\n        console.log(student1);\r\n    \r\n        axios.post('/student/add', student1)\r\n          .then(res => console.log(res.data))\r\n    \r\n      }\r\n\r\n    render () { \r\n        return( \r\n        <div>\r\n        <div className=\"row\">\r\n        <div className=\"col-4\"></div>\r\n        <h4 className=\"display-4\">Registration</h4>\r\n        <div className=\"col-4\"></div>\r\n        </div>\r\n        <div className=\"row\">\r\n        <div className=\"col-2\"></div>\r\n        <div className=\"col-4\">\r\n            <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label >Name</label>\r\n                    <input type=\"text\" className=\"form-control\" value = {this.state.name} onChange={this.onChangename}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Father's Name</label>\r\n                    <input type=\"text\" className=\"form-control\" value = {this.state.fatherName} onChange={this.onChangefatherName}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Category</label>\r\n                    <input type=\"text\" className=\"form-control\" value = {this.state.category} onChange={this.onChangecategory}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Address</label>\r\n                    <input type=\"text\" className=\"form-control\" value = {this.state.address} onChange={this.onChangeaddress}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Contact Number</label>\r\n                    <input type=\"text\" className=\"form-control\" value = {this.state.mobileNumber} onChange={this.onChangemobileNumber}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>XII Percentage</label>\r\n                    <input type=\"text\" className=\"form-control\" value = {this.state.percentage} onChange={this.onChangepercentage}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Upload XII Marksheet</label>\r\n                    <input type=\"file\" className=\"form-control-file\"/>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n            </form>\r\n        </div>\r\n        <div className=\"col-2\"></div>\r\n        </div>    \r\n        </div>       \r\n        )\r\n        }\r\n}\r\n\r\nexport default Registration;","import React from 'react';\nimport './App.css';\nimport Nav from './Nav'\nimport Login from './Login'\nimport Registration from './Registration'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"MyApp\">\n        <Nav />\n        <br />\n        <Route path='/' exact component={Login} />\n        <Route path='/Register' component={Registration} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}